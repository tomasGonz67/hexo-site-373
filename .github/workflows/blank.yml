name: Test and Deploy Hexo Site

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      # Checkout the Hexo website repository
      - name: Checkout Hexo repository
        uses: actions/checkout@v4

      # Set up Node.js environment
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'  # Specify your Node.js version
          cache: 'npm'

      - name: Install Hexo and dependencies
        run: |
          npm install hexo-cli -g
          npm install

      # Generate the static website
      - name: Generate Hexo site
        run: hexo generate

      - name: Clone Playwright test repository
        run: |
          git clone https://github.com/vvh24/IS373-Playwright.git
          npm install


      # Checkout the Playwright test repository
      - name: Checkout Playwright test repository
        uses: actions/checkout@v4
        with:
          repository: vvh24/IS373-Playwright
          run: node test.js



  deploy:
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.event_name == 'push'

    steps:
      # Checkout Hexo repository
      - name: Checkout Hexo repository
        uses: actions/checkout@v4

      # Set up Node.js environment
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      # Install dependencies in the blog directory
      - name: Install dependencies in the blog directory
        working-directory: blog
        run: npm ci

      # Generate Hexo site
      - name: Generate Hexo site
        working-directory: blog
        run: npx hexo generate

      # Deploy to GitHub Pages
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public  # Hexo outputs the generated files to the 'public' directory
